name: Android APK Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ github.workspace }}

      - name: Lint
        run: npm run lint --if-present
        working-directory: ${{ github.workspace }}

      - name: Run tests
        run: npm test
        working-directory: ${{ github.workspace }}

      - name: Build web app
        run: npm run build
        working-directory: ${{ github.workspace }}

      - name: Upload web build artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: dist/
          retention-days: 7
        working-directory: ${{ github.workspace }}

  gradle-build:
    runs-on: ubuntu-latest
    needs: test-and-build
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Release APK
        run: ./gradlew assembleRelease --no-daemon --stacktrace
        working-directory: ${{ github.workspace }}/android

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 30
        working-directory: ${{ github.workspace }}

  release:
    needs: gradle-build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: ./apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./apk/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
